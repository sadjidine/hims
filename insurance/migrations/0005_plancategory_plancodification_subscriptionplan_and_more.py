# Generated by Django 4.2.4 on 2023-08-23 10:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('medical', '0006_degree_standing_and_more'),
        ('core', '0002_alter_locality_options_and_more'),
        ('insurance', '0004_product_productcodificationconfiguration_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlanCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('ALL', 'All')], default=None, max_length=3, verbose_name='Gender')),
                ('relationship', models.CharField(choices=[('Member', 'Member'), ('Spouse', 'Spouse'), ('Child', 'Child'), ('Member+Spouse', 'Member + Spouse'), ('Member+Child', 'Member + Child'), ('Spouse+Child', 'Spouse + Child'), ('All', 'All')], default=None, max_length=24, verbose_name='Relationship')),
                ('isTicketDue', models.BooleanField(default=True, verbose_name='Is Ticket Due')),
                ('individualMaxiService', models.PositiveIntegerField(default=0, help_text='Maximum number services per Person', verbose_name='Maxi Svce/Person')),
                ('familyMaxiService', models.PositiveIntegerField(default=0, help_text='Maximum nummber services per family', verbose_name='Maxi Svce/Family')),
                ('personalCeiling', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Ceiling/Person')),
                ('familyCeiling', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Ceiling/Ceiling')),
                ('ageLimit', models.PositiveIntegerField(default=0, help_text='Age limitation for allowing the service', verbose_name='Age limit')),
                ('waitingDelay', models.PositiveIntegerField(default=0, help_text='Delay between two (2) services in days!', verbose_name='Waiting delay')),
                ('serviceTimeOut', models.PositiveIntegerField(default=0, help_text='Waiting delay after registering in days!', verbose_name='Timeout')),
                ('sStrict', models.BooleanField(default=False, verbose_name='Is strict')),
                ('note', models.TextField(blank=True, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='medical.category')),
            ],
        ),
        migrations.CreateModel(
            name='PlanCodification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publicRate', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Public Rate')),
                ('privateRate', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Private Rate')),
                ('claimRate', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Claim Rate')),
                ('individualCeiling', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Indidual Ceiling')),
                ('familyCeiling', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Family Ceiling')),
                ('ceilingAmount', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Ceiling Amount')),
                ('waitingDelay', models.PositiveIntegerField(help_text='Waiting delay in days.', verbose_name='Waiting Delay')),
                ('isStrict', models.BooleanField(default=False, verbose_name='Is strict')),
                ('note', models.TextField(blank=True, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('codification', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='medical.codification')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('validityDelay', models.PositiveIntegerField(help_text='Medical Care Validity Delay!', verbose_name='Validity')),
                ('delayAmount', models.DecimalField(decimal_places=0, max_digits=6, verbose_name='Delay Amount')),
                ('isGenderControl', models.BooleanField(default=True, verbose_name='Is Gender Control')),
                ('waitingPeriod', models.PositiveIntegerField(verbose_name='Waiting Period')),
                ('individualCeiling', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Individual Ceiling')),
                ('familyCeiling', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Family Ceiling')),
                ('privateCoverage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Private Coverage')),
                ('publicCoverage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Public Coverage')),
                ('publicClaim', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Public Claim')),
                ('privateClaim', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Private Claim')),
                ('claimDelay', models.PositiveIntegerField(help_text='Delay in days', verbose_name='Claim Delay')),
                ('maxClaim', models.PositiveIntegerField(help_text='Maximum number of claims allowed', verbose_name='Max Claim')),
                ('claimCeilling', models.DecimalField(decimal_places=0, help_text='Claim Ceilling Amount', max_digits=9, verbose_name='Claim Ceilling')),
                ('individualClaimCeiling', models.DecimalField(decimal_places=0, help_text='Individual Claim Ceiling Amount', max_digits=9, verbose_name='Individual Claim Ceiling')),
                ('familyClaimCeiling', models.DecimalField(decimal_places=0, help_text='Family Claim Ceiling Amount', max_digits=9, verbose_name='Family Claim Ceiling')),
                ('memberAgeLimit', models.PositiveIntegerField(help_text='Member Age Limit allowance', verbose_name='Member Age Limit')),
                ('childAgeLimit', models.PositiveIntegerField(help_text='Child Age Limit allowance', verbose_name='Child Age Limit')),
                ('additionalChild', models.PositiveIntegerField(help_text='Allowed Child Limited Number allowed!', verbose_name='Additional Child')),
                ('childMaxi', models.PositiveIntegerField(help_text='Allowed Child Limited Number allowed!', verbose_name='Maximum Child')),
                ('childMajority', models.PositiveIntegerField(help_text='Majority Age of child', verbose_name='Child Majority Age')),
                ('spouseAgeLimit', models.PositiveIntegerField(help_text='Spouse Age Limit allowance', verbose_name='Spouse Age Limit')),
                ('additionalSpouse', models.PositiveIntegerField(help_text='Allowed Spouse Limited Number allowed!', verbose_name='Additional Spouse')),
                ('spouseMaxi', models.PositiveIntegerField(help_text='Allowed Spouse Limited Number allowed!', verbose_name='Maximum Spouse')),
                ('subscriptionFees', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Subscription Fees')),
                ('feesCycle', models.CharField(choices=[('day', 'Daily'), ('weekly', 'Weekly'), ('fortnight', 'Fortnight'), ('monthly', 'Monthly'), ('quarterly', 'Quaterly'), ('halfyearly', 'Half-yearly'), ('yearly', 'Yearly')], default=None, max_length=16)),
                ('note', models.TextField(blank=True, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='policies', to='core.company')),
                ('standing', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='medical.standing')),
            ],
            options={
                'unique_together': {('company', 'label')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='productcodificationconfiguration',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='productcodificationconfiguration',
            name='codification',
        ),
        migrations.RemoveField(
            model_name='productcodificationconfiguration',
            name='product',
        ),
        migrations.DeleteModel(
            name='Product',
        ),
        migrations.DeleteModel(
            name='ProductCodificationConfiguration',
        ),
        migrations.AddField(
            model_name='plancodification',
            name='subscriptionPlan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='insurance.subscriptionplan'),
        ),
        migrations.AddField(
            model_name='plancategory',
            name='subscriptionPlan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='insurance.subscriptionplan'),
        ),
        migrations.AlterUniqueTogether(
            name='plancodification',
            unique_together={('codification', 'subscriptionPlan')},
        ),
    ]
