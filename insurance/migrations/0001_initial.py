# Generated by Django 4.2.4 on 2023-08-26 19:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_code', models.CharField(editable=False, max_length=50, unique=True, verbose_name='ID. Code')),
                ('first_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=32)),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female')])),
                ('date_of_birth', models.DateField(verbose_name='Date of birth')),
                ('relationship', models.IntegerField(choices=[(0, 'Spouse'), (1, 'Child')], default=None, verbose_name='Relationship')),
                ('blood_group', models.IntegerField(blank=True, choices=[(0, 'A+'), (1, 'A-'), (2, 'B+'), (3, 'B-'), (4, 'AB+'), (5, 'AB-'), (6, 'O+'), (7, 'O-')], default=None, null=True)),
                ('mobile', models.CharField(blank=True, max_length=10, null=True)),
                ('deceased_at', models.DateField(blank=True, null=True, verbose_name='Deceased at')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_stopped', models.BooleanField(default=True)),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='Creation Date')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modified Date')),
                ('is_active', models.BooleanField(default=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('grouping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.grouping')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.locality')),
            ],
        ),
        migrations.CreateModel(
            name='Suspension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_date', models.DateField(verbose_name='begin date')),
                ('end_date', models.DateField(verbose_name='end date')),
                ('reason', models.TextField(verbose_name='Suspension Reason')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='Creation Date')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modified Date')),
                ('note', models.TextField(blank=True, null=True)),
                ('assign', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='insurance.assign')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('validity_delay', models.PositiveSmallIntegerField(default=0, help_text='Medical Care Validity Delay!', verbose_name='Validity')),
                ('standing', models.IntegerField(choices=[(0, '*'), (1, '**'), (2, '***'), (3, '****'), (4, '*****')], default=None, verbose_name='Standing')),
                ('is_gender_gontrol', models.BooleanField(default=True, verbose_name='Is Gender Control')),
                ('waiting_delay', models.PositiveSmallIntegerField(default=0, help_text='Waiting delay in days.', verbose_name='Waiting Delay')),
                ('individual_ceiling', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='Individual Ceiling')),
                ('family_ceiling', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='Family Ceiling')),
                ('private_coverage', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Private Coverage')),
                ('public_coverage', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Public Coverage')),
                ('public_claim', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Public Claim')),
                ('private_claim', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Private Claim')),
                ('claim_delay', models.PositiveSmallIntegerField(default=0, help_text='Delay in days', verbose_name='Claim Delay')),
                ('max_claim', models.PositiveSmallIntegerField(default=0, help_text='Maximum number of claims allowed', verbose_name='Max Claim')),
                ('claim_ceilling', models.DecimalField(decimal_places=0, default=0, help_text='Claim Ceilling Amount', max_digits=9, verbose_name='Claim Ceilling')),
                ('individual_claim_ceiling', models.DecimalField(decimal_places=0, default=0, help_text='Individual Claim Ceiling Amount', max_digits=9, verbose_name='Individual Claim Ceiling')),
                ('family_claim_ceiling', models.DecimalField(decimal_places=0, default=0, help_text='Family Claim Ceiling Amount', max_digits=9, verbose_name='Family Claim Ceiling')),
                ('member_age_limit', models.PositiveSmallIntegerField(default=0, help_text='Member Age Limit allowance', verbose_name='Member Age Limit')),
                ('child_age_limit', models.PositiveSmallIntegerField(default=0, help_text='Child Age Limit allowance', verbose_name='Child Age Limit')),
                ('additional_child', models.PositiveSmallIntegerField(default=0, help_text='Allowed Child Limited Number allowed!', verbose_name='Additional Child')),
                ('child_maxi', models.PositiveSmallIntegerField(default=0, help_text='Allowed Child Limited Number allowed!', verbose_name='Maximum Child')),
                ('child_majority', models.PositiveSmallIntegerField(default=0, help_text='Majority Age of child', verbose_name='Child Majority Age')),
                ('spouse_age_limit', models.PositiveSmallIntegerField(default=0, help_text='Spouse Age Limit allowance', verbose_name='Spouse Age Limit')),
                ('additional_spouse', models.PositiveSmallIntegerField(default=0, help_text='Allowed Spouse Limited Number allowed!', verbose_name='Additional Spouse')),
                ('spouse_maxi', models.PositiveSmallIntegerField(default=0, help_text='Allowed Spouse Limited Number allowed!', verbose_name='Maximum Spouse')),
                ('insurance_premium', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='Insurance Premium')),
                ('premium_cycle', models.IntegerField(choices=[(0, 'Daily'), (1, 'Weekly'), (2, 'Fortnight'), (3, 'Monthly'), (4, 'Quaterly'), (5, 'Half-yearly'), (6, 'Yearly')], default=None, verbose_name='Premium Cycle')),
                ('min_tolerated_amount', models.DecimalField(decimal_places=0, default=0, max_digits=6, verbose_name='Min. Tolerated Amount')),
                ('is_active', models.BooleanField(default=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='policies', to='core.company')),
            ],
            options={
                'unique_together': {('company', 'label')},
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_code', models.CharField(editable=False, max_length=50, unique=True, verbose_name='ID. Code')),
                ('first_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=32)),
                ('matricule', models.CharField(max_length=12)),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female')])),
                ('date_of_birth', models.DateField()),
                ('blood_group', models.IntegerField(blank=True, choices=[(0, 'A+'), (1, 'A-'), (2, 'B+'), (3, 'B-'), (4, 'AB+'), (5, 'AB-'), (6, 'O+'), (7, 'O-')], default=None, null=True)),
                ('mobile', models.CharField(blank=True, max_length=10, null=True)),
                ('deceased_at', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('grouping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.grouping')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.locality')),
            ],
            options={
                'ordering': ('first_name', 'last_name'),
            },
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginDate', models.DateField(verbose_name='begin date')),
                ('endDate', models.DateField(verbose_name='end date')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='Creation Date')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modified Date')),
                ('note', models.TextField(blank=True, null=True)),
                ('assign', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='insurance.assign')),
            ],
        ),
        migrations.CreateModel(
            name='Police',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='insurance.subscriber')),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='insurance.subscriptionplan')),
            ],
            options={
                'unique_together': {('subscriber', 'subscription_plan')},
            },
        ),
        migrations.CreateModel(
            name='PlanCodification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_rate', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Public Rate')),
                ('private_rate', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Private Rate')),
                ('claim_rate', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Claim Rate')),
                ('individual_ceiling', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='Indidual Ceiling')),
                ('family_ceiling', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='Family Ceiling')),
                ('ceiling_cmount', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='Ceiling Amount')),
                ('waiting_delay', models.PositiveSmallIntegerField(default=0, help_text='Waiting delay in days.', verbose_name='Waiting Delay')),
                ('is_strict', models.BooleanField(default=False, verbose_name='Is strict')),
                ('is_active', models.BooleanField(default=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='insurance.subscriptionplan')),
            ],
        ),
        migrations.CreateModel(
            name='PlanCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female'), (2, 'All')], default=None, verbose_name='Gender')),
                ('relationship', models.IntegerField(choices=[(0, 'Member'), (1, 'Spouse'), (2, 'Child'), (3, 'Member + Spouse'), (4, 'Member + Child'), (5, 'Spouse + Child'), (6, 'All')], default=None, verbose_name='Relationship')),
                ('is_ticket_due', models.BooleanField(default=True, verbose_name='Is Ticket Due')),
                ('individual_maxi_service', models.PositiveSmallIntegerField(default=0, help_text='Maximum number services per Person', verbose_name='Maxi Svce/Person')),
                ('family_maxi_service', models.PositiveSmallIntegerField(default=0, help_text='Maximum nummber services per family', verbose_name='Maxi Svce/Family')),
                ('personal_ceiling', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='Ceiling/Person')),
                ('family_ceiling', models.DecimalField(decimal_places=0, default=0, max_digits=9, verbose_name='Ceiling/Ceiling')),
                ('age_limit', models.PositiveSmallIntegerField(default=0, help_text='Age limitation for allowing the service', verbose_name='Age limit')),
                ('waiting_delay', models.PositiveSmallIntegerField(default=0, help_text='Delay between two (2) services in days!', verbose_name='Waiting delay')),
                ('service_timeOut', models.PositiveSmallIntegerField(default=0, help_text='Waiting delay after registering in days!', verbose_name='Timeout')),
                ('is_strict', models.BooleanField(default=False, verbose_name='Is strict')),
                ('is_active', models.BooleanField(default=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='insurance.subscriptionplan')),
            ],
        ),
        migrations.AddField(
            model_name='assign',
            name='police',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='assigns', to='insurance.police'),
        ),
    ]
